Delete a user with id {contact_id} from the contacts of a user with id of {id}
  Cannot be accessed by a user with a different id than specified in the parameters. User needs to be logged in (have a valid JWT).
  Therefore to remove user <User 2> with id of 2 from the contacts of user <User 1> with id of 1, a DELETE request can be sent to `/users/1/contacts/2` by <User 1>
    ---
    consumes:
      - "application/json"
    produces:
    - "application/json"
    security:
    - APIKeyHeader: ['x-access-tokens']
    parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: ID of the user who wants to delete someone from their contact list.
      - name: contact_id
        in: path
        type: integer
        required: true
        description: ID of the contact to be deleted from a user's contact list.
    definitions:
      # Test model
      Test:
        type: object
        properties:
          id:
            type: "integer"
            format: "int64"
          date:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
          location:
            type: "string"
            example: "Ridge Hospital"
      # User model
      User:
        type: object
        properties:
          id:
            type: "integer"
            format: "int64"
          first_name:
            type: "string"
            example: "John"
          last_name:
            type: "string"
            example: "Doe"
          username:
            type: "string"
            example: "johnthedoe"
          email:
            type: "string"
            example: "John"
          gender:
            type: "boolean"
            example: "true"
          dob:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
          phone_number:
            type: "string"
            example: "233-457-2345"
          is_verified:
            type: "boolean"
            example: "false"
          is_admin:
            type: "boolean"
            example: "false"
      # Visited locations model
      VisitedLocation:
        type: object
        properties:
          location_name:
            type: "string"
            example: "Bloombar"
          date_tested:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
      # Error object model
      ErrorObject:
        type: object
        properties:
          data:
            type: null
            example: null
          error:
            type: string
            example: A more detailed explanation of the error.
          message:
            type: string
            example: Something went wrong.
      # Success object model
      SuccessObject:
        type: object
        properties:
          data:
            type: object
            properties:
              id:
                type: integer
                example: 1
          error:
            type: null
            example: null
          message:
            type: string
            example: Performed action successfully
      # Location object model
      Location:
        type: object
        properties:
          id:
            type: integer
            example: 1
          latitude:
            type: float
            example: 5.5536
          longitude:
            type: float
            example: 0.2006
          location_name:
            type: string
            example: National Theatre
      # User Object Model with minimal fields
      UserMin:
        type: object
        properties:
          id:
            type: "integer"
            format: "int64"
          first_name:
            type: "string"
            example: "John"
          last_name:
            type: "string"
            example: "Doe"
          username:
            type: "string"
            example: "johnthedoe"
      # Testing Center Model
      TestingCenter:
        type: object
        properties:
          id:
            type: integer
            format: "int64"
          name:
            type: string
            example: Ridge Hospital
          region:
            type: string
            example: GRA
          constituency:
            type: string
            example: New Constituency
    responses:
      200:
        description: Contact was removed successfully.
        schema:
          type: object
          $ref: '#/definitions/SuccessObject'

      401:
        description: Unauthorized user or authorized user trying to delete contacts on behalf of another user.
        schema:
          type: object
          $ref: '#/definitions/ErrorObject'