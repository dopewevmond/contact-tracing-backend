Delete a location with id {location_id} from the location history of a user with id of {id}
  Cannot be accessed by a user with a different id than specified in the parameters. User needs to be logged in (have a valid JWT).
  Therefore to delete location <Location 2> with id of 2 from the location history of user <User 1> with id of 1, a DELETE request can be sent to `/users/1/visited/2` by <User 1>
    ---
    consumes:
      - "application/json"
    produces:
    - "application/json"
    security:
    - APIKeyHeader: ['x-access-tokens']
    parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: ID of the user who wants to delete a location from their location history.
      - name: location_id
        in: path
        type: integer
        required: true
        description: "ID of the location to be deleted from a user's hisory."
    definitions:
      # Test model
      Test:
        type: object
        properties:
          id:
            type: "integer"
            format: "int64"
          date:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
          location:
            type: "string"
            example: "Ridge Hospital"
      # User model
      User:
        type: object
        properties:
          id:
            type: "integer"
            format: "int64"
          first_name:
            type: "string"
            example: "John"
          last_name:
            type: "string"
            example: "Doe"
          username:
            type: "string"
            example: "johnthedoe"
          email:
            type: "string"
            example: "John"
          gender:
            type: "boolean"
            example: "true"
          dob:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
          phone_number:
            type: "string"
            example: "233-457-2345"
          is_verified:
            type: "boolean"
            example: "false"
          is_admin:
            type: "boolean"
            example: "false"
      # Visited locations model
      VisitedLocation:
        type: object
        properties:
          location_name:
            type: "string"
            example: "Bloombar"
          date_tested:
            type: "string"
            example: "2022-06-09 21:53:20.001234"
      ErrorObject:
        type: object
        properties:
          data:
            type: null
            example: "null"
          error:
            type: string
          message:
            type: string
    responses:
      200:
        description: Contact was removed successfully
        schema:
          type: object
          properties:
            message:
              type: "string"
              example: "Removed contact successfully"
            data:
              type: null
              example: null
            error:
              type: null
              example: null
      401:
        description: Unauthorized user or authorized user trying to delete contacts on behalf of another user
        schema:
          type: object
          properties:
            message:
              type: "string"
              example: "Unauthorized to access this resource"
            data:
              type: "null"
              example: null
            error:
              type: "string"
              example: "Unauthorized"